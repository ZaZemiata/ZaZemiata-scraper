// Prisma Client
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
  seed            = "ts-node ./seeders/sourceSeeders.ts"
}

// Database connection
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the schema

// Source model
model Source {
  id                       BigInt    @id @default(autoincrement()) @db.BigInt
  site_name                String
  url                      String
  worker_name              String   @default("default")
  last_scrape_time         DateTime?
  scrape_frequency_seconds Float    @default(0)
  active                   Boolean  @default(true)
  created_at               DateTime @default(now())

  CrawlTasks CrawlTask[]
  CrawledData CrawledData[]
}

// CrawlTask model
model CrawlTask {
  id           BigInt            @id @default(autoincrement()) @db.BigInt
  status       CrawlTaskStatus   @default(PENDING)
  created_at   DateTime          @default(now())
  completed_at DateTime?
  error        String?

  source   Source @relation(fields: [sourceId], references: [id])
  sourceId BigInt
}

// Enum for CrawlTask status
enum CrawlTaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}

// CrawledData model
model CrawledData {
  id         BigInt   @id @default(autoincrement()) @db.BigInt
  created_at DateTime @default(now())
  data       String

  source     Source   @relation(fields: [sourceId], references: [id])
  sourceId   BigInt
}
